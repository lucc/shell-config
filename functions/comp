# vim: ft=zsh

if [[ $1 = -h ]]; then
  cat <<-'EOF' >&2
	Usage: comp [-n] shell-code-string-1  shell-code-string-2 [number]
	       comp -h

	 The shell code strings will be passed to eval, each executed number
	 times (10 by default).  If -n is given the output of the commands is
	 NOT supressed.

	 With this you can compare the execution times of external commands,
	 shell functions or literal shell code.

	EOF
  return
fi

# check the first argument and decide if we should redirect stdout and stderr
if [[ $1 = -n ]]; then
  local output=
  shift
else
  local output='>& /dev/null'
fi

## save the current setting of shwordsplit
#local oldshwordsplit=
#if setopt | grep -q '^shwordsplit$'; then
#  oldshwordsplit=shwordsplit
#else
#  oldshwordsplit=noshwordsplit
#fi

#setopt shwordsplit
type ${1%% *} > /dev/null 2>&1 || return 2
type ${2%% *} > /dev/null 2>&1 || return 3
printf 1
eval "time ( for ((i=0; i<${3:-10}; i++)); do $1; done $output )"
printf 2
eval "time ( for ((i=0; i<${3:-10}; i++)); do $2; done $output )"
#setopt $oldshwordsplit
