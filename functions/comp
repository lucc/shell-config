# vim: ft=zsh

local output='>& /dev/null'
local check=true
local debug=false
local i

local usage=\
'Usage: comp [-fnx] shell-code-string-1  shell-code-string-2 [number]
       comp -h'
local help='
The shell code strings will be passed to eval, each executed number times (10
by default).  If -n is given the output of the commands is NOT supressed.  If
-f is given the first word of the two strings is NOT checked if it is a valid
command/function/alias/buildin ...

With this you can compare the execution times of external commands, shell
functions or literal shell code.
'

while getopts fhnx FLAG; do
  case $FLAG in
    h)
      echo $usage
      echo $help
      return
      ;;
    n)
      output=
      ;;
    f)
      check=false
      ;;
    x)
      # Only set xtrace if it was not set (especially only unset xtrace if we
      # set it ourselfs).
      [[ -o xtrace ]] || debug=true
      ;;
    *)
      echo $usage >&2
      return 2
      ;;
  esac
done

shift $((OPTIND - 1))


## save the current setting of shwordsplit
#local oldshwordsplit=
#if setopt | grep -q '^shwordsplit$'; then
#  oldshwordsplit=shwordsplit
#else
#  oldshwordsplit=noshwordsplit
#fi

#setopt shwordsplit
if $check; then
  type ${1%% *} > /dev/null 2>&1 || return 2
  type ${2%% *} > /dev/null 2>&1 || return 3
fi
if $debug; then
  set -x
fi
printf 1
eval time \( for i in {0..${3:-10}} \; do $1 \; done $output \)
printf 2
eval time \( for i in {0..${3:-10}} \; do $2 \; done $output \)
if $debug; then
  set +x
fi
#setopt $oldshwordsplit
